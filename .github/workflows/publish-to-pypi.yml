# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload FluMutDB release to PyPI

on:
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build SQLite DB
        run: |
          mkdir -p src/flumutdb/
          touch src/flumutdb/__init__.py
          cat flumut_db.sql | sqlite3 src/flumutdb/flumut_db.sqlite
          sqlite3 $database "SELECT major || '.' || minor FROM db_version" >version.txt

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
      - name: Build package
        run: python -m build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist_folder
          path: dist

  pypi-publish:
    name: upload release to PyPI
    runs-on: ubuntu-latest
    # Specifying a GitHub environment is optional, but strongly encouraged
    environment: release
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: dist_folder
        path: dist
    # retrieve your distributions here
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
